
package mx.itson.moviesys.ui;

import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import mx.itson.moviesys.entities.Function;
import mx.itson.moviesys.entities.Movie;
import mx.itson.moviesys.entities.Room;
import mx.itson.moviesys.persistence.FunctionDAO;
import mx.itson.moviesys.persistence.MovieDAO;
import mx.itson.moviesys.persistence.MySQLConnection;
import mx.itson.moviesys.persistence.RoomDAO;

/**
 * La clase Interface representa la interfaz gráfica de usuario para la aplicación MovieGO.
 * Proporciona funcionalidades para la gestión de películas, salas y funciones de cine.
 * 
 * @author José Manuel Leyva Munguía
 * @version 1.0
 */
public class Interface extends javax.swing.JFrame {
    
    MySQLConnection cn = new MySQLConnection();
    Connection con;
    // Modelos de tabla para mostrar datos en la interfaz
    DefaultTableModel tblMoviesModel;
    DefaultTableModel tblRoomsModel;
    DefaultTableModel tblFunctionsModel;
    
    Statement st;
    ResultSet rs;
    
    // Identificadores de películas, salas y funciones inicializados
    int idMovie = 0;
    int idRoom = 0;
    int idFunction = 0;
    
    /**
     * Crea una nueva instancia de la interfaz.
     */
    public Interface() {
        initComponents();
        listMovie();
        listRoom();
        listFunction();
        setTitle("MovieGO");
        
        // Configuración del fondo de la interfaz
        JPanel panel = new JPanel();
        panel.setBackground(Color.RED);
        panel.setSize(getSize());
        getContentPane().add(panel);
        revalidate();
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txfMovieName = new javax.swing.JTextField();
        txfMovieDirector = new javax.swing.JTextField();
        txfMovieLength = new javax.swing.JTextField();
        txfMovieGenre = new javax.swing.JTextField();
        txfMovieRating = new javax.swing.JTextField();
        txfMovieCountry = new javax.swing.JTextField();
        txfMovieStudio = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMovies = new javax.swing.JTable();
        btnAddMovie = new javax.swing.JButton();
        btnUpdateMovie = new javax.swing.JButton();
        btnDeleteMovie = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txfRoomName = new javax.swing.JTextField();
        txfRoomCapacity = new javax.swing.JTextField();
        txfRoomAvailability = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRooms = new javax.swing.JTable();
        btnAddRoom = new javax.swing.JButton();
        btnUpdateRoom = new javax.swing.JButton();
        btnDeleteRoom = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txfFunctionPrice = new javax.swing.JTextField();
        txfFunctionDate = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblFunctions = new javax.swing.JTable();
        btnAddFunction = new javax.swing.JButton();
        btnUpdateFunction = new javax.swing.JButton();
        btnDeleteFunction = new javax.swing.JButton();
        txfFunctionRoom = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txfFunctionMovie = new javax.swing.JTextField();
        txfFunctionHour = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Título:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Director:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Duración:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Género:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Clasificación:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("País:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Distribuidora:");

        tblMovies.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "name", "director", "genre", "length", "rating", "country", "studio"
            }
        ));
        tblMovies.setSelectionBackground(new java.awt.Color(255, 255, 0));
        tblMovies.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMoviesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMovies);

        btnAddMovie.setBackground(new java.awt.Color(255, 255, 0));
        btnAddMovie.setText("Agregar película");
        btnAddMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMovieActionPerformed(evt);
            }
        });

        btnUpdateMovie.setBackground(new java.awt.Color(255, 255, 0));
        btnUpdateMovie.setText("Actualizar película");
        btnUpdateMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateMovieActionPerformed(evt);
            }
        });

        btnDeleteMovie.setBackground(new java.awt.Color(255, 255, 0));
        btnDeleteMovie.setText("Eliminar película");
        btnDeleteMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteMovieActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Nombre:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Capacidad:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Disponibilidad:");

        tblRooms.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "name", "capacity", "availability"
            }
        ));
        tblRooms.setSelectionBackground(new java.awt.Color(0, 51, 255));
        tblRooms.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRoomsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblRooms);

        btnAddRoom.setBackground(new java.awt.Color(0, 51, 255));
        btnAddRoom.setForeground(new java.awt.Color(255, 255, 255));
        btnAddRoom.setText("Agregar sala");
        btnAddRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRoomActionPerformed(evt);
            }
        });

        btnUpdateRoom.setBackground(new java.awt.Color(0, 51, 255));
        btnUpdateRoom.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateRoom.setText("Actualizar sala");
        btnUpdateRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateRoomActionPerformed(evt);
            }
        });

        btnDeleteRoom.setBackground(new java.awt.Color(0, 51, 255));
        btnDeleteRoom.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteRoom.setText("Eliminar sala");
        btnDeleteRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRoomActionPerformed(evt);
            }
        });

        jLabel11.setText("Precio:");

        jLabel12.setText("Día:");

        tblFunctions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "movie", "room", "date", "hour", "price"
            }
        ));
        tblFunctions.setSelectionBackground(new java.awt.Color(51, 153, 0));
        tblFunctions.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblFunctionsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblFunctions);

        btnAddFunction.setBackground(new java.awt.Color(51, 153, 0));
        btnAddFunction.setForeground(new java.awt.Color(255, 255, 255));
        btnAddFunction.setText("Agregar función");
        btnAddFunction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFunctionActionPerformed(evt);
            }
        });

        btnUpdateFunction.setBackground(new java.awt.Color(51, 153, 0));
        btnUpdateFunction.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateFunction.setText("Actualizar función");
        btnUpdateFunction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateFunctionActionPerformed(evt);
            }
        });

        btnDeleteFunction.setBackground(new java.awt.Color(51, 153, 0));
        btnDeleteFunction.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteFunction.setText("Eliminar función");
        btnDeleteFunction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteFunctionActionPerformed(evt);
            }
        });

        jLabel13.setText("Sala:");

        jLabel14.setText("Película:");

        jLabel15.setText("Hora:");

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mx/itson/moviesys/images/Logo_de_Cinemex.svg (1).png"))); // NOI18N

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mx/itson/moviesys/images/pngwing.com (24).png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addGap(633, 633, 633))
            .addGroup(layout.createSequentialGroup()
                .addGap(361, 361, 361)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(30, 30, 30)
                        .addComponent(txfFunctionRoom))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txfFunctionMovie))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel15))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfFunctionDate)
                            .addComponent(txfFunctionHour)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(txfFunctionPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(btnAddFunction)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdateFunction)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteFunction)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txfMovieName)
                    .addComponent(txfMovieDirector)
                    .addComponent(txfMovieLength)
                    .addComponent(txfMovieGenre)
                    .addComponent(txfMovieRating)
                    .addComponent(txfMovieCountry)
                    .addComponent(txfMovieStudio, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel9))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txfRoomAvailability, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txfRoomCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txfRoomName, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(29, 29, 29)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(339, 339, 339)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnDeleteRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnAddRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnUpdateRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(btnAddMovie)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdateMovie)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteMovie)))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txfMovieName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(txfMovieDirector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txfMovieLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txfMovieGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txfMovieRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(txfMovieCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(txfMovieStudio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnAddMovie)
                                    .addComponent(btnUpdateMovie)
                                    .addComponent(btnDeleteMovie)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txfRoomName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txfRoomCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txfRoomAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAddRoom)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdateRoom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDeleteRoom)))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txfFunctionMovie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txfFunctionRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txfFunctionDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(txfFunctionHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txfFunctionPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddFunction)
                            .addComponent(btnUpdateFunction)
                            .addComponent(btnDeleteFunction)))
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Acción realizada al hacer clic en el botón "Agregar Película".
     * Crea una nueva instancia de la entidad Movie, la llena con los datos ingresados en la interfaz,
     * y la agrega a la base de datos mediante el objeto MovieDAO.
     */
    private void btnAddMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMovieActionPerformed
        
        Movie movie = new Movie();
        movie.setName(txfMovieName.getText());
        movie.setDirector(txfMovieDirector.getText());
        movie.setGenre(txfMovieGenre.getText());
        movie.setLength(txfMovieLength.getText());
        movie.setRating(txfMovieRating.getText());
        movie.setCountry(txfMovieCountry.getText());
        movie.setStudio(txfMovieStudio.getText());
        
        MovieDAO movieDao = new MovieDAO();
        movieDao.addMovie(movie);
        JOptionPane.showMessageDialog(null, "¡Película Guardada Exitosamente!");
        
        cleanTable(tblMoviesModel);
        
        listMovie();
        txfMovieName.setText("");
        txfMovieDirector.setText("");
        txfMovieGenre.setText("");
        txfMovieLength.setText("");
        txfMovieRating.setText("");
        txfMovieCountry.setText("");
        txfMovieStudio.setText("");
    }//GEN-LAST:event_btnAddMovieActionPerformed
    /**
     * Acción realizada al hacer clic en el botón "Actualizar Película".
     * Crea una instancia de la entidad Movie, la llena con los datos modificados en la interfaz,
     * y actualiza la información en la base de datos mediante el objeto MovieDAO.
     */
    private void btnUpdateMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateMovieActionPerformed
        
        Movie movie = new Movie();
        movie.setId(idMovie);
        movie.setName(txfMovieName.getText());
        movie.setDirector(txfMovieDirector.getText());
        movie.setGenre(txfMovieGenre.getText());
        movie.setLength(txfMovieLength.getText());
        movie.setRating(txfMovieRating.getText());
        movie.setCountry(txfMovieCountry.getText());
        movie.setStudio(txfMovieStudio.getText());
        MovieDAO movieDao = new MovieDAO();
        movieDao.updateMovie(movie);
        JOptionPane.showMessageDialog(null, "¡Película Modificada Exitosamente!");
        cleanTable(tblMoviesModel);
        listMovie();
        txfMovieName.setText("");
        txfMovieDirector.setText("");
        txfMovieGenre.setText("");
        txfMovieLength.setText("");
        txfMovieRating.setText("");
        txfMovieCountry.setText("");
        txfMovieStudio.setText("");
    }//GEN-LAST:event_btnUpdateMovieActionPerformed
    /**
     * Acción realizada al hacer clic en el botón "Eliminar Película".
     * Elimina la película seleccionada de la base de datos mediante el objeto MovieDAO.
     */
    private void btnDeleteMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteMovieActionPerformed
        
        MovieDAO movieDao = new MovieDAO();
        movieDao.deleteMovie(idMovie);
        JOptionPane.showMessageDialog(null, "¡Película Eliminada!");
        cleanTable(tblMoviesModel);
        listMovie();
        txfMovieName.setText("");
        txfMovieDirector.setText("");
        txfMovieGenre.setText("");
        txfMovieLength.setText("");
        txfMovieRating.setText("");
        txfMovieCountry.setText("");
        txfMovieStudio.setText("");
    }//GEN-LAST:event_btnDeleteMovieActionPerformed
    /**
     * Acción realizada al hacer clic en una fila de la tabla de películas.
     * Captura la información de la película seleccionada y la muestra en la interfaz para su edición.
     */
    private void tblMoviesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMoviesMouseClicked
        
        int row = tblMovies.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "No se seleccionó la película.");
        }else {
            idMovie = Integer.parseInt((String) tblMovies.getValueAt(row, 0).toString());
            String name = (String) tblMovies.getValueAt(row, 1);
            String director = (String) tblMovies.getValueAt(row, 2);
            String genre = (String) tblMovies.getValueAt(row, 3);
            String length = (String) tblMovies.getValueAt(row, 4);
            String rating = (String) tblMovies.getValueAt(row, 5);
            String country = (String) tblMovies.getValueAt(row, 6);
            String studio = (String) tblMovies.getValueAt(row, 7);
            txfMovieName.setText(name);
            txfMovieDirector.setText(director);
            txfMovieGenre.setText(genre);
            txfMovieLength.setText(length);
            txfMovieRating.setText(rating);
            txfMovieCountry.setText(country);
            txfMovieStudio.setText(studio);
        }
    }//GEN-LAST:event_tblMoviesMouseClicked
    /**
     * Acción realizada al hacer clic en una fila de la tabla de salas.
     * Captura la información de la sala seleccionada y la muestra en la interfaz para su edición.
     */
    private void tblRoomsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRoomsMouseClicked
        
        int row = tblRooms.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "No se seleccionó la sala.");
        }else {
            idRoom = Integer.parseInt((String) tblRooms.getValueAt(row, 0).toString());
            String name = (String) tblRooms.getValueAt(row, 1);
            String capacity = (String) tblRooms.getValueAt(row, 2);
            String availability = (String) tblRooms.getValueAt(row, 3);
            txfRoomName.setText(name);
            txfRoomCapacity.setText(capacity);
            txfRoomAvailability.setText(availability);
        }
    }//GEN-LAST:event_tblRoomsMouseClicked
    /**
     * Acción realizada al hacer clic en el botón "Agregar Sala".
     * Crea una nueva instancia de la entidad Room, la llena con los datos ingresados en la interfaz,
     * y la agrega a la base de datos mediante el objeto RoomDAO.
     */
    private void btnAddRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRoomActionPerformed
        
        Room room = new Room();
        room.setName(txfRoomName.getText());
        int roomCapacity = Integer.parseInt(txfRoomCapacity.getText());
        room.setCapacity(roomCapacity);
        room.setAvailability(txfRoomAvailability.getText());
        
        RoomDAO roomDao = new RoomDAO();
        roomDao.addRoom(room);
        JOptionPane.showMessageDialog(null, "¡Sala Guardada Exitosamente!");
        
        cleanTable(tblRoomsModel);
        
        listRoom();
        txfRoomName.setText("");
        txfRoomCapacity.setText("");
        txfRoomAvailability.setText("");
    }//GEN-LAST:event_btnAddRoomActionPerformed
    /**
     * Acción realizada al hacer clic en el botón "Actualizar Sala".
     * Crea una instancia de la entidad Room, la llena con los datos modificados en la interfaz,
     * y actualiza la información en la base de datos mediante el objeto RoomDAO.
     */
    private void btnUpdateRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateRoomActionPerformed
        
        Room room = new Room();
        room.setId(idRoom);
        room.setName(txfRoomName.getText());
        int roomCapacity = Integer.parseInt(txfRoomCapacity.getText());
        room.setCapacity(roomCapacity);
        room.setAvailability(txfRoomAvailability.getText());
        
        RoomDAO roomDao = new RoomDAO();
        roomDao.updateRoom(room);
        JOptionPane.showMessageDialog(null, "¡Sala Modificada Exitosamente!");
        
        cleanTable(tblRoomsModel);
        
        listRoom();
        txfRoomName.setText("");
        txfRoomCapacity.setText("");
        txfRoomAvailability.setText("");
    }//GEN-LAST:event_btnUpdateRoomActionPerformed
    /**
     * Acción realizada al hacer clic en el botón "Eliminar Sala".
     * Elimina la sala seleccionada de la base de datos mediante el objeto RoomDAO.
     */
    private void btnDeleteRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRoomActionPerformed
        
        RoomDAO roomDao = new RoomDAO();
        roomDao.deleteRoom(idRoom);
        JOptionPane.showMessageDialog(null, "¡Sala Eliminada!");
        cleanTable(tblRoomsModel);
        listRoom();
        txfRoomName.setText("");
        txfRoomCapacity.setText("");
        txfRoomAvailability.setText("");
    }//GEN-LAST:event_btnDeleteRoomActionPerformed
    /**
     * Acción realizada al hacer clic en una fila de la tabla de funciones.
     * Obtiene los datos de la función seleccionada y los muestra en los campos correspondientes.
     */
    private void tblFunctionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblFunctionsMouseClicked
        
        int row = tblFunctions.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "No se seleccionó la función.");
        }else {
            idFunction = Integer.parseInt((String) tblFunctions.getValueAt(row, 0).toString());
            String movie = (String) tblFunctions.getValueAt(row, 1);
            String room = (String) tblFunctions.getValueAt(row, 2);
            String date = (String) tblFunctions.getValueAt(row, 3);
            String hour = (String) tblFunctions.getValueAt(row, 4);
            Double p = (Double) tblFunctions.getValueAt(row, 5);
            String price = String.valueOf(p);
            txfFunctionMovie.setText(movie);
            txfFunctionRoom.setText(room);
            txfFunctionDate.setText(date);
            txfFunctionHour.setText(hour);
            txfFunctionPrice.setText(price);
        }
    }//GEN-LAST:event_tblFunctionsMouseClicked
    /**
     * Acción realizada al hacer clic en el botón para agregar una nueva función.
     * Crea un objeto de tipo Function con los datos ingresados en los campos y lo guarda en la base de datos.
     */
    private void btnAddFunctionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFunctionActionPerformed
        
        Function function = new Function();
        function.setMovie(txfFunctionMovie.getText());
        function.setRoom(txfFunctionRoom.getText());
        function.setDate(txfFunctionDate.getText());
        function.setHour(txfFunctionHour.getText());
        function.setPrice(Double.parseDouble(txfFunctionPrice.getText()));
        
        FunctionDAO functionDao = new FunctionDAO();
        functionDao.addFunction(function);
        
        JOptionPane.showMessageDialog(null, "¡Función Guardada Exitosamente!");
        
        cleanTable(tblFunctionsModel);
        
        listFunction();
        
        txfFunctionMovie.setText("");
        txfFunctionRoom.setText("");
        txfFunctionDate.setText("");
        txfFunctionHour.setText("");
        txfFunctionPrice.setText("");
    }//GEN-LAST:event_btnAddFunctionActionPerformed
    /**
     * Acción realizada al hacer clic en el botón para actualizar una función existente.
     * Crea un objeto de tipo Function con los datos modificados en los campos y actualiza la información en la base de datos.
     */
    private void btnUpdateFunctionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateFunctionActionPerformed
        
        Function function = new Function();
        function.setId(idFunction);
        function.setMovie(txfFunctionMovie.getText());
        function.setRoom(txfFunctionRoom.getText());
        function.setDate(txfFunctionDate.getText());
        function.setHour(txfFunctionHour.getText());
        function.setPrice(Double.parseDouble(txfFunctionPrice.getText()));
        
        FunctionDAO functionDao = new FunctionDAO();
        functionDao.updateFunction(function);
        
        JOptionPane.showMessageDialog(null, "¡Función Modificada Exitosamente!");
        
        cleanTable(tblFunctionsModel);
        
        listFunction();
        
        txfFunctionMovie.setText("");
        txfFunctionRoom.setText("");
        txfFunctionDate.setText("");
        txfFunctionHour.setText("");
        txfFunctionPrice.setText("");
    }//GEN-LAST:event_btnUpdateFunctionActionPerformed
    /**
     * Acción realizada al hacer clic en el botón para eliminar una función.
     * Crea un objeto de tipo Function con el ID de la función a eliminar y realiza la eliminación en la base de datos.
     */
    private void btnDeleteFunctionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteFunctionActionPerformed
        
        FunctionDAO functionDao = new FunctionDAO();
        functionDao.deleteFunction(idFunction);
        JOptionPane.showMessageDialog(null, "¡Función Eliminada!");
        cleanTable(tblFunctionsModel);
        listFunction();
        
        txfFunctionMovie.setText("");
        txfFunctionRoom.setText("");
        txfFunctionDate.setText("");
        txfFunctionHour.setText("");
        txfFunctionPrice.setText("");
    }//GEN-LAST:event_btnDeleteFunctionActionPerformed

    /**
     * Punto de entrada principal para la aplicación. 
     * Configura el aspecto y comportamiento de la interfaz de usuario.
     * 
     * @param args Los argumentos de la línea de comandos.
     */
    public static void main(String args[]) {
        /* Establece el aspecto Nimbus */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Crea y muestra la interfaz */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }
    /**
     * Limpia el contenido de un modelo de tabla.
     * 
     * @param model El modelo de la tabla a limpiar.
     */
    void cleanTable(DefaultTableModel model) {
        model.setRowCount(0);
    }
    /**
     * Obtiene y muestra la lista de películas en la tabla de películas.
     */
    void listMovie() {
        String sql = "select * from tblmovies";
        try {
            con = cn.getConnection();
            st = con.createStatement();
            rs = st.executeQuery(sql);
            Object[] movies = new Object[8]; 
            
            tblMoviesModel = (DefaultTableModel) tblMovies.getModel();
            while (rs.next()) {
                
                
                movies[0] = rs.getInt("id");
                movies[1] = rs.getString("name");
                movies[2] = rs.getString("director");
                movies[3] = rs.getString("genre");
                movies[4] = rs.getString("length");
                movies[5] = rs.getString("rating");
                movies[6] = rs.getString("country");
                movies[7] = rs.getString("studio");
                tblMoviesModel.addRow(movies);
                
            }
            tblMovies.setModel(tblMoviesModel);
        
        } catch (Exception e) {
            e.printStackTrace();
        }

    }
    /**
     * Obtiene y muestra la lista de salas en la tabla de salas.
     */
    void listRoom() {
        String sql = "select * from tblrooms";
        try {
            con = cn.getConnection();
            st = con.createStatement();
            rs = st.executeQuery(sql);
            Object[] rooms = new Object[4]; 
            tblRoomsModel = (DefaultTableModel) tblRooms.getModel();
            
            while (rs.next()) {
                
                
                rooms[0] = rs.getInt("id");
                rooms[1] = rs.getString("name");
                rooms[2] = rs.getInt("capacity");
                rooms[3] = rs.getString("availability");
                
                tblRoomsModel.addRow(rooms);
                
            }
            tblRooms.setModel(tblRoomsModel);
            
        } catch (Exception e) {
            e.printStackTrace();
        }

    }
    /**
     * Obtiene y muestra la lista de funciones en la tabla de funciones.
     */
    void listFunction() {
        String sql = "select * from tblfunctions";
        try {
            con = cn.getConnection();
            st = con.createStatement();
            rs = st.executeQuery(sql);
            Object[] functions = new Object[6]; 
            tblFunctionsModel = (DefaultTableModel) tblFunctions.getModel();
            
            while (rs.next()) {
                
                
                functions[0] = rs.getInt("id");
                functions[1] = rs.getString("movie");
                functions[2] = rs.getString("room");
                functions[3] = rs.getString("date");
                functions[4] = rs.getString("hour");
                functions[5] = rs.getDouble("price");
                
                tblFunctionsModel.addRow(functions);
                
            }
            tblFunctions.setModel(tblFunctionsModel);
            
        } catch (Exception e) {
            e.printStackTrace();
        }

    }
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFunction;
    private javax.swing.JButton btnAddMovie;
    private javax.swing.JButton btnAddRoom;
    private javax.swing.JButton btnDeleteFunction;
    private javax.swing.JButton btnDeleteMovie;
    private javax.swing.JButton btnDeleteRoom;
    private javax.swing.JButton btnUpdateFunction;
    private javax.swing.JButton btnUpdateMovie;
    private javax.swing.JButton btnUpdateRoom;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblFunctions;
    private javax.swing.JTable tblMovies;
    private javax.swing.JTable tblRooms;
    private javax.swing.JTextField txfFunctionDate;
    private javax.swing.JTextField txfFunctionHour;
    private javax.swing.JTextField txfFunctionMovie;
    private javax.swing.JTextField txfFunctionPrice;
    private javax.swing.JTextField txfFunctionRoom;
    private javax.swing.JTextField txfMovieCountry;
    private javax.swing.JTextField txfMovieDirector;
    private javax.swing.JTextField txfMovieGenre;
    private javax.swing.JTextField txfMovieLength;
    private javax.swing.JTextField txfMovieName;
    private javax.swing.JTextField txfMovieRating;
    private javax.swing.JTextField txfMovieStudio;
    private javax.swing.JTextField txfRoomAvailability;
    private javax.swing.JTextField txfRoomCapacity;
    private javax.swing.JTextField txfRoomName;
    // End of variables declaration//GEN-END:variables
}
